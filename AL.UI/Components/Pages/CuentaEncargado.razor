@page "/CuentaEncargado"
@inject IServicioSesion ServicioSesion
@inject NavigationManager NavigationManager
@inject IUsuarioRepositorio UsuarioRepositorio

@rendermode InteractiveServer

<h3>Cuenta Encargado</h3>
<div class="row">
    <div class="col-auto">
        <div class="card mb-3" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Chats</h5>
                <p class="card-text">Puede ver el historial de mensajes </p>
                <a href="/BandejaDeEntrada" class="btn btn-primary">Conversaciones</a>
            </div>
        </div>
    </div>
    <div class="col-auto">
        <div class="card mb-3" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">CheckOut</h5>
                <p class="card-text">Puede registrar el Check-Out de los alojamientos </p>
                <a href="/check-outs-pendientes" class="btn btn-primary">Ir</a>
            </div>
        </div>
    </div>
</div>

@code {
    private bool _usuarioInicializado = false;

    protected override void OnInitialized()
    {
        ServicioSesion.IniciarSesion();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_usuarioInicializado)
        {
            await ServicioSesion.InicializarUsuarioAsync();
            if (ServicioSesion.Rol != RolUsuario.Encargado)
            {
                NavigationManager.NavigateTo("/", true);

            }
            var usuario = UsuarioRepositorio.ObtenerPorId(ServicioSesion.Id);
            if (usuario != null)
            {
                _usuarioInicializado = true;
                ServicioSesion.IniciarSesion();
            }

            StateHasChanged();
        }
    }
}
