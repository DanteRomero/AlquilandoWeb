@page "/BandejaDeEntrada"
@layout AL.UI.Components.Layout.AdminLayout
@rendermode InteractiveServer
@inject IReservasRepositorio ReservasRepositorio
@inject ReservaConsultaTodos ReservaConsultaTodos
@inject IAlojamientoRepositorio AlojamientoRepositorio
@inject NavigationManager NavigationManager
@inject IServicioSesion ServicioSesion

<button @onclick="VolverAtras" class="btn btn-primary">Volver</button>

<h3> Reservas</h3>

@if (_reservas is null)
{
    <p>Cargando conversaciones...</p>
}
else if (!_reservas.Any())
{
    <p>No hay conversaciones</p>
}
else
{
    <table class="table">
        <tbody>
            @foreach (var reserva in _reservas)
            {
            <div class="card p-2 my-2">
            <div class="d-flex justify-content-between align-items-start">
                <div> 
                    <p>Alojamiento: @(_datosAlojamiento[reserva.Id])</p>
                    <p>Desde: @reserva.FechaInicioEstadia.ToShortDateString()</p>
                    <p>Hasta: @reserva.FechaFinEstadia.ToShortDateString()</p>
                    <p>Monto: $@reserva.MontoEstadia</p>
                </div>
                <span class="badge bg-secondary fs-6">@reserva.EstadoReserva</span>
            </div>
            <div class="d-flex justify-content-end align-items-end mt-2" style="height: 40px;">

                @if(reserva.EstadoReserva == EstadoReserva.Finalizada || reserva.EstadoReserva == EstadoReserva.Confirmada || reserva.EstadoReserva == EstadoReserva.EnCurso){
                    <button class="btn btn-outline-primary position-relative me-2" @onclick="() => IrAlChat(reserva.Id)">
                        Chat
                        @if (reserva.MensajesNoLeidos > 0)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                @reserva.MensajesNoLeidos
                            <span class="visually-hidden">mensajes no leídos</span>
                            </span>
                        }
                    </button>
                }
            </div>
        </div>
    }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-info mt-2">@mensaje</div>
}
@code {
    private RolUsuario rol => ServicioSesion.Rol;
    List<Reserva>? _reservas= new();
    Dictionary<int, String> _datosAlojamiento = new();
    private bool _usuarioInicializado = false;
    private string mensaje = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_usuarioInicializado)
        {
            await ServicioSesion.InicializarUsuarioAsync();
            if (ServicioSesion.Rol == RolUsuario.Invitado )
            {
                NavigationManager.NavigateTo("/", true);

            }
            if(ServicioSesion.Usuario!=null){
              _usuarioInicializado = true;
              ServicioSesion.IniciarSesion();
            }

            _reservas = ReservaConsultaTodos.Ejecutar(ServicioSesion.Id); 
            foreach (var reserva in _reservas)
            {
                Alojamiento? alojamiento =await AlojamientoRepositorio.ObtenerPorId(reserva.IdAlojamiento);
                if (alojamiento != null)
                {
                    _datosAlojamiento[reserva.Id] = $"{alojamiento.Nombre}, {alojamiento.Ciudad}, {alojamiento.Direccion}";
                }
            }
            StateHasChanged(); // Refresca la UI si es necesario
        }
    }
    private void IrAlChat(int idReserva)
    {
        NavigationManager.NavigateTo($"/Chat/{idReserva}");
    }
    void VolverAtras()
    {
        if(ServicioSesion.Rol == RolUsuario.Administrador)
            NavigationManager.NavigateTo("/CuentaAdministrador");
        else if(ServicioSesion.Rol == RolUsuario.Encargado)
            NavigationManager.NavigateTo("/CuentaEncargado");

    }

}